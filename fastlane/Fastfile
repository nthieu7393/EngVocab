# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

platform :ios do
 desc 'Load ASC API Key information to use in subsequent lanes'
 lane :load_asc_api_key do
   app_store_connect_api_key(
     key_id: 'T2TM8TLBCV',
     issuer_id: '3bfff8be-a470-48b5-9d2f-7ed90a062e21',
     key_content: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR1RBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJIa3dkd0lCQVFRZ0k5U0dzdW93YlBUa0ZoK3QKV09OWWJYT0lyd2VMa3BKV09LNXk1TytYMXlLZ0NnWUlLb1pJemowREFRZWhSQU5DQUFUMWwwK3VRb005WXlPagptRzJ5aEtrcDBhZDFGVUxuaC9EaG83b3EveHkzQ0FDMlVrcWE2WFEvWXo5S1hETXJhQlY2d3RMSmVoejRBMVdBCit3Q2VLek1VCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=',
     is_key_content_base64: true,
     in_house: false
   )
 end

 desc 'Bump build number based on most recent TestFlight build number'
 lane :fetch_and_increment_build_number do
  #fetch read your app identifier defined in your Appfile
  app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
  # api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]
  api_key = app_store_connect_api_key(
    key_id: 'T2TM8TLBCV',
    issuer_id: '3bfff8be-a470-48b5-9d2f-7ed90a062e21',
    key_content: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR1RBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJIa3dkd0lCQVFRZ0k5U0dzdW93YlBUa0ZoK3QKV09OWWJYT0lyd2VMa3BKV09LNXk1TytYMXlLZ0NnWUlLb1pJemowREFRZWhSQU5DQUFUMWwwK3VRb005WXlPagptRzJ5aEtrcDBhZDFGVUxuaC9EaG83b3EveHkzQ0FDMlVrcWE2WFEvWXo5S1hETXJhQlY2d3RMSmVoejRBMVdBCit3Q2VLek1VCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=',
    is_key_content_base64: true,
    in_house: false
  )
 
  current_version = get_version_number(
    target: 'EngVocab' # replace with your main target, required if you have more than one non-test target
  )
  latest_build_number = latest_testflight_build_number(
    api_key: api_key,
    version: current_version,
    app_identifier: app_identifier
  )
  increment_build_number(
    build_number: (latest_build_number + 1),
  )
 end

 desc 'Check certs and profiles'
 lane :prepare_signing do |options|
  app_id = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
  api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]
  profile_name = 'EngVocab App Provisioning Profile' # replace with the name of your existing profile, or define a name for the profile that fastlane will create if it’s not found
 
  cert(
      api_key: 'T2TM8TLBCV',
      keychain_path: '~/Library/Keychains/login.keychain-db' # the path to the keychain where your certificates are stored
    )
 
  # main app profile
  sigh(
    api_key: api_key,
    app_identifier: app_id,
    provisioning_name: profile_name,
    force: true # always recreate this exact profile to ensure it's valid and not expired
  )
 end

#  decs 'Create keychain'
#  lane :create_keychain do
#   xcversion(version: '~>12.3')
#   xcode_select '/Applications/Xcode_14_2.app'
#   create_keychain(
#     name: 'EngVocab_test',
#     password: '12345',
#     default_keychain: true,
#     unlock: true,
#     timeout: 3600,
#     lock_when_sleeps: false
#   )
#  end

 desc 'Build the iOS app for release'
 lane :build_release do |options|
  app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
 
  profile_name = 'EngVocab App Provisioning Profile' # the name of the profile to use for the build
  output_name = 'EngVocab-iOS' # specify the name of the .ipa file to generate
  export_method = 'app-store' # specify the export method
  compile_bitcode = false # specify whether to enable bitcode
 
  # turn off automatic signing during build so correct code signing identity is guaranteed to be used
  update_code_signing_settings(
    use_automatic_signing: false,
    targets: ['EngVocab'], # specify which targets to update code signing settings for
    code_sign_identity: 'Apple Distribution', # replace with name of code signing identity if different
    bundle_identifier: app_identifier,
    profile_name: profile_name,
    build_configurations: ['Release'] # only toggle code signing settings for Release configurations
  )
 
  # build the app
  gym(
    scheme: 'EngVocab', # replace with name of your project’s scheme
    output_name: output_name,
    configuration: 'Release',
    export_options: {
      method: export_method,
      provisioningProfiles: {
        app_identifier => profile_name
      },
      compileBitcode: compile_bitcode
    }
  )
 end

 desc 'Upload to TestFlight / ASC'
 lane :upload_release do
  api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]
 
  deliver(
      api_key: api_key,
      skip_screenshots: true,
      skip_metadata: true,
      skip_app_version_update: true,
      force: true, # skips verification of HTML preview file (since this will be run from a CI machine)
      run_precheck_before_submit: false # not supported through ASC API yet
  )
 end

 desc 'Build and upload to TestFlight'
 lane :build_upload_testflight do
   load_asc_api_key
  #  create_keychain
   prepare_signing
   fetch_and_increment_build_number
   build_release
   upload_release
 end

end


#default_platform(:ios)

#platform :ios do
  #desc 'Description of what the lane does'
  #lane :custom_lane do
    # add actions here: https://docs.fastlane.tools/actions
  #end
#end
